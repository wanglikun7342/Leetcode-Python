from typing import List


class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        M = len(graph)
        node = initial[0]
        for virus_remove in initial:
            nodes = [0 for _ in range(0, len(graph))]
            for virus in initial:
                if virus == virus_remove:
                    continue
                self.__dfs__(graph, virus_remove, nodes, virus)
            if sum(nodes) < M or (sum(nodes) == M and virus_remove < node):
                M = sum(nodes)
                node = virus_remove
        return node

    def __dfs__(self, graph, remove, nodes, virus):
        if nodes[virus] == 1:
            return
        else:
            nodes[virus] = 1
            for index in range(0, len(graph[virus])):
                if graph[virus][index] == 1 and index != remove:
                    self.__dfs__(graph, remove, nodes, index)


if __name__ == '__main__':
    solution = Solution()
    print(solution.minMalwareSpread([[1, 1, 0], [1, 1, 0], [0, 0, 1]], [0, 1]))
